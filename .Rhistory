# Asignar nombres a las columnas
colnames(datos) <- c("año", "mes", "dia", "precipitacion", "max_temp", "min_temp")
# Cargar los datos desde el archivo CSV
datos <- read.csv(file.choose(), header = FALSE, sep = " ")
View(datos)
# Asignar nombres a las columnas
colnames(datos) <- c("año", "mes", "dia", "precipitacion", "max_temp", "min_temp")
View(datos)
datos$precipitacion <- na.approx(datos$precipitacion)
install.packages("zoo")
# Completar datos faltantes en la serie de precipitación utilizando interpolación lineal
datos$precipitacion[datos$precipitacion == -99.9] <- NA
datos$min_temp <- na.approx(datos$min_temp)
library(zoo)
datos$min_temp <- na.approx(datos$min_temp)
datos$max_temp <- na.approx(datos$max_temp)
datos$precipitacion <- na.approx(datos$precipitacion)
# Completar datos faltantes en la serie de precipitación, max_temp y min_temp utilizando interpolación lineal
datos$precipitacion[datos$precipitacion == -99.9] <- NA
datos$max_temp[datos$max_temp == -99.9] <- NA
datos$min_temp[datos$min_temp == -99.9] <- NA
promedio_min_temp <- aggregate(min_temp ~ año, data = datos, mean)
# Calcular el promedio de temperatura máxima y mínima por año
promedio_max_temp <- aggregate(max_temp ~ año, data = datos, mean)
# Calcular la precipitación total anual
precipitacion_anual <- aggregate(precipitacion ~ año, data = datos, sum)
View(precipitacion_anual)
View(promedio_max_temp)
install.packages("ggplot2")
library(ggplot2)
ggplot() +
geom_bar(data = precipitacion_anual, aes(x = año, y = precipitacion), stat = "identity", fill = "blue", alpha = 0.5) +
geom_line(data = promedio_max_temp, aes(x = año, y = max_temp, color = "Temperatura Máxima")) +
geom_line(data = promedio_min_temp, aes(x = año, y = min_temp, color = "Temperatura Mínima")) +
labs(x = "Año", y = "Precipitación Total (mm) / Temperatura (°C)", title = "Precipitación Total Anual y Promedio de Temperaturas") +
scale_color_manual(values = c("Temperatura Máxima" = "red", "Temperatura Mínima" = "blue")) +
theme_minimal()
# Cargar los datos desde el archivo CSV
datos <- read.csv(file.choose(), header = FALSE, sep = " ")
# Asignar nombres a las columnas
colnames(datos) <- c("año", "mes", "dia", "precipitacion", "max_temp", "min_temp")
datos$precipitacion[datos$precipitacion == -99.9] <- NA
datos$max_temp[datos$max_temp == -99.9] <- NA
datos$min_temp[datos$min_temp == -99.9] <- NA
datos$precipitacion <- na.approx(datos$precipitacion)
library(zoo)
# Asignar nombres a las columnas
colnames(datos) <- c("año", "mes", "dia", "precipitacion", "max_temp", "min_temp")
# Completar datos faltantes en la serie de precipitación, max_temp y min_temp utilizando interpolación lineal
datos$precipitacion[datos$precipitacion == -99.9] <- NA
datos$max_temp[datos$max_temp == -99.9] <- NA
datos$min_temp[datos$min_temp == -99.9] <- NA
datos$precipitacion <- na.approx(datos$precipitacion)
datos$max_temp <- na.approx(datos$max_temp)
datos$max_temp <- na.approx(datos$max_temp)
datos$precipitacion <- na.approx(datos$precipitacion)
datos$max_temp <- na.approx(datos$max_temp)
# Completar datos faltantes en la serie de precipitación, max_temp y min_temp utilizando interpolación lineal
datos$precipitacion[datos$precipitacion == -99.9] <- NA
datos$max_temp[datos$max_temp == -99.9] <- NA
datos$min_temp[datos$min_temp == -99.9] <- NA
datos$precipitacion <- na.approx(datos$precipitacion)
datos$max_temp <- na.approx(datos$max_temp)
datos$min_temp <- na.approx(datos$min_temp)
clear
clear()
ls
lcs
datos$precipitacion <- na.approx(datos$precipitacion)
datos$max_temp <- na.approx(datos$max_temp)
datos$min_temp <- na.approx(datos$min_temp)
# Calcular la precipitación total anual
precipitacion_anual <- aggregate(precipitacion ~ año, data = datos, sum)
# Calcular el promedio de temperatura máxima y mínima por año
promedio_max_temp <- aggregate(max_temp ~ año, data = datos, mean)
promedio_min_temp <- aggregate(min_temp ~ año, data = datos, mean)
View(precipitacion_anual)
View(promedio_max_temp)
View(promedio_min_temp)
View(datos)
library(readr)
detach("package:readr", unload = TRUE)
la.cascarilla <- read.table("~/Documents/jupyter notebook/estaciones/la cascarilla.csv", quote="\"", comment.char="")
View(la.cascarilla)
# Cargar los datos desde el archivo CSV
datos <- read.csv('la.cascarilla', header = FALSE, sep = " ")
# Cargar los datos desde el archivo CSV
datos <- read.csv('la cascarilla', header = FALSE, sep = " ")
View(la.cascarilla)
# Cargar los datos desde el archivo CSV
datos <- read.csv(file.choose(), header = FALSE, sep = " ")
# Cargar los datos desde el archivo CSV
datos <- read.csv(file.choose(), header = FALSE, sep = " ")
# Asignar nombres a las columnas
colnames(datos) <- c("año", "mes", "dia", "precipitacion", "max_temp", "min_temp")
View(datos)
library(zoo)
# Completar datos faltantes en la serie de precipitación, max_temp y min_temp utilizando interpolación lineal
datos$precipitacion[datos$precipitacion == -99.9] <- NA
datos$max_temp[datos$max_temp == -99.9] <- NA
datos$min_temp[datos$min_temp == -99.9] <- NA
datos$precipitacion <- na.approx(datos$precipitacion)
datos$max_temp <- na.approx(datos$max_temp)
datos$precipitacion <- na.approx(datos$precipitacion)
datos$max_temp <- na.approx(datos$max_temp)
datos$min_temp <- na.approx(datos$min_temp)
# Calcular la precipitación total anual
precipitacion_anual <- aggregate(precipitacion ~ año, data = datos, sum)
# Calcular el promedio de temperatura máxima y mínima por año
promedio_max_temp <- aggregate(max_temp ~ año, data = datos, mean)
promedio_min_temp <- aggregate(min_temp ~ año, data = datos, mean)
# Crear un gráfico de barras
ggplot() +
geom_bar(data = precipitacion_anual, aes(x = año, y = precipitacion), stat = "identity", fill = "blue", alpha = 0.5) +
geom_line(data = promedio_max_temp, aes(x = año, y = max_temp, color = "Temperatura Máxima")) +
geom_line(data = promedio_min_temp, aes(x = año, y = min_temp, color = "Temperatura Mínima")) +
labs(x = "Año", y = "Precipitación Total (mm) / Temperatura (°C)", title = "Precipitación Total Anual y Promedio de Temperaturas") +
scale_color_manual(values = c("Temperatura Máxima" = "red", "Temperatura Mínima" = "blue")) +
theme_minimal()
# Crear un gráfico de barras
ggplot() +
geom_bar(data = precipitacion_anual, aes(x = año, y = precipitacion), stat = "identity", fill = "blue", alpha = 0.5) +
geom_line(data = promedio_max_temp, aes(x = año, y = max_temp, color = "Temperatura Máxima")) +
geom_line(data = promedio_min_temp, aes(x = año, y = min_temp, color = "Temperatura Mínima")) +
labs(x = "Año", y = "Precipitación Total (mm) / Temperatura (°C)", title = "Precipitación Total Anual y Promedio de Temperaturas") +
scale_color_manual(values = c("Temperatura Máxima" = "red", "Temperatura Mínima" = "blue")) +
theme_minimal()
library(ggplot2)
# Crear un gráfico de barras
ggplot() +
geom_bar(data = precipitacion_anual, aes(x = año, y = precipitacion), stat = "identity", fill = "blue", alpha = 0.5) +
geom_line(data = promedio_max_temp, aes(x = año, y = max_temp, color = "Temperatura Máxima")) +
geom_line(data = promedio_min_temp, aes(x = año, y = min_temp, color = "Temperatura Mínima")) +
labs(x = "Año", y = "Precipitación Total (mm) / Temperatura (°C)", title = "Precipitación Total Anual y Promedio de Temperaturas") +
scale_color_manual(values = c("Temperatura Máxima" = "red", "Temperatura Mínima" = "blue")) +
theme_minimal()
View(promedio_max_temp)
View(precipitacion_anual)
install.packages('Hmisc')
install.packages("Hmisc")
install.packages("mice")
a <- "hola"
a
install.packages("mice")
install.packages("tydeverse")
install.packages("mice")
clear
ls
install.packages("Hmisc")
install.packages("Hmisc")
clc
clc()
help()
install.packages("mice")
install.packages("Hmisc")
install.packages("mice")
install.packages("Hmisc", dependencies = TRUE)
install.packages(magic)
install.packages("magic")
?magic
??magic
install.packages("tidyverse")
install.packages(‘googledrive’, ‘googlesheets4’, ‘httr’, ‘ragg’, ‘rvest’, ‘xml2’)
install.packages(‘googledrive’)
install.packages('googledrive')
install.packages('curl')
install.packages("tidyverse")
install.packages("tidyverse")
update.packages()
install.packages("tidyverse", dependencies = TRUE)
install.packages(c("DEoptimR", "fansi", "htmltools", "systemfonts", "vroom"))
install.packages("tidyverse", dep = TRUE)
library(magic)
magic(4)
install.packages("tidyverse", dep = TRUE)
install.packages("DataExplorer")
library(zoo, lib.loc = "/usr/lib/R/site-library")
detach("package:zoo", unload = TRUE)
remove.packages("zoo", lib="/usr/lib/R/site-library")
setwd("~/Documents/R studio/Proyects/pp variabilidad mensual")
#variabilidad mensual
source('tabla.R')
#importar los datos
datos <- read.csv("data/pucara.csv", header = FALSE, sep = ' ')
View(datos)
#Damos forma a la tabla
datos <- setTable(datos)
#variabilidad mensual
source('tabla.R')
#Agregamos la media mensual
datos.mean <-setMean(datos)
#Agregamos la media mensual
datos.mean <-addMean(datos)
#variabilidad mensual
source('tabla.R')
#Agregamos la media mensual
datos.mean <-addMean(datos)
#variabilidad mensual
source('tabla.R')
#Agregamos la media mensual
datos.mean <-addMean(datos)
#variabilidad mensual
source('tabla.R')
#Agregamos la media mensual
datos.mean <-addMean(datos)
View(datos.mean)
#ruta de la carpeta
ruta_carpeta <- "data"
# Utiliza list.files() para obtener la lista de archivos en la carpeta
archivos_en_carpeta <- list.files(path = ruta_carpeta, pattern = "\\.csv$", full.names = TRUE)
# Imprime la lista de archivos CSV
print(archivos_en_carpeta)
# Crear una lista de dataframes
lista_de_dataframes <- list()
# Recorre la lista de archivos y crea dataframes
for (archivo in archivos_en_carpeta) {
# Extrae el nombre del archivo sin la extensión
nombre_dataframes <- sub(".csv$", "", basename(archivo))
# Carga el archivo CSV en un dataframe con el mismo nombre
lista_de_dataframes[[nombre_dataframes]] <- read.csv(archivo)
}
# Accede a los dataframes por nombre (por ejemplo, para el dataframe "archivo1.csv")
df_archivo1 <- lista_de_dataframes[["archivo1"]]
View(lista_de_dataframes)
# Accede a los dataframes por nombre (por ejemplo, para el dataframe "archivo1.csv")
df_archivo1 <- lista_de_dataframes[archivos_en_carpeta[1]]
View(df_archivo1)
lista_de_dataframes[["chontali"]]
lista_de_dataframes[["la cascarilla"]]
print(archivos_en_carpeta[1])
# Accede a los dataframes por nombre (por ejemplo, para el dataframe "archivo1.csv")
df_archivo1 <- lista_de_dataframes[[archivos_en_carpeta[1]]]
# Accede a los dataframes por nombre (por ejemplo, para el dataframe "archivo1.csv")
df_archivo1 <- lista_de_dataframes[[archivos_en_carpeta[1]]]
# Accede a los dataframes por nombre (por ejemplo, para el dataframe "archivo1.csv")
df_archivo1 <- lista_de_dataframes[archivos_en_carpeta[1]]
View(df_archivo1)
df_archivo1
View(lista_de_dataframes)
lista_de_dataframes[["chontali"]]
# Recorre la lista de archivos y modifica dataframes
for (archivo in archivos_en_carpeta) {
# Extrae el nombre del archivo sin la extensión
nombre_dataframes <- sub(".csv$", "", basename(archivo))
# Carga el archivo CSV en un dataframe con el mismo nombre
lista_de_dataframes[[nombre_dataframes]] <- setTable(lista_de_dataframes[[nombre_dataframes]])
}
print(lista_de_dataframes[[archivos_en_carpeta[1]]])
print(archivos_en_carpeta[1])
print(sub(".csv$", "", basename(archivos_en_carpeta[1])))
print(lista_de_dataframes[[sub(".csv$", "", basename(archivos_en_carpeta[1]))]])
# Carga el archivo CSV en un dataframe con el mismo nombre
lista_de_dataframes[[nombre_dataframes]] <- setTable(lista_de_dataframes[nombre_dataframes])
# Recorre la lista de archivos y modifica dataframes
for (archivo in archivos_en_carpeta) {
# Extrae el nombre del archivo sin la extensión
nombre_dataframes <- sub(".csv$", "", basename(archivo))
# Carga el archivo CSV en un dataframe con el mismo nombre
lista_de_dataframes[[nombre_dataframes]] <- setTable(lista_de_dataframes[nombre_dataframes])
}
# Recorre la lista de archivos y modifica dataframes
for (archivo in archivos_en_carpeta) {
# Extrae el nombre del archivo sin la extensión
nombre_dataframes <- sub(".csv$", "", basename(archivo))
# Carga el archivo CSV en un dataframe con el mismo nombre
lista_de_dataframes[[nombre_dataframes]] <- setTable(lista_de_dataframes[[nombre_dataframes]])
}
View(df_archivo1)
View(lista_de_dataframes)
df_archivo1 <- lista_de_dataframes[["chontali"]]
View(df_archivo1)
# Recorre la lista de archivos y crea dataframes
for (archivo in archivos_en_carpeta) {
# Extrae el nombre del archivo sin la extensión
nombre_dataframes <- sub(".csv$", "", basename(archivo))
# Carga el archivo CSV en un dataframe con el mismo nombre
lista_de_dataframes[[nombre_dataframes]] <- read.csv(archivo, header = FALSE, sep = ' ')
}
df_archivo1 <- lista_de_dataframes[["chontali"]]
View(df_archivo1)
# Recorre la lista de archivos y modifica dataframes
for (archivo in archivos_en_carpeta) {
# Extrae el nombre del archivo sin la extensión
nombre_dataframes <- sub(".csv$", "", basename(archivo))
# Carga el archivo CSV en un dataframe con el mismo nombre
lista_de_dataframes[[nombre_dataframes]] <- setTable(lista_de_dataframes[[nombre_dataframes]])
}
View(lista_de_dataframes)
df_archivo1 <- lista_de_dataframes[["chontali"]]
#variabilidad mensual
source('tabla.R')
df_estaciones <- addMean(lista_dataframes)
df_estaciones <- addMean(lista_de_dataframes)
View(df_estaciones)
print(df_estaciones)
library(ggplot2)
# Graficar el dataframe con ggplot2
ggplot(nuevo_dataframe, aes(x = estaciones)) +
geom_bar(aes(y = enero, fill = "Enero"), stat = "identity") +
geom_bar(aes(y = febrero, fill = "Febrero"), stat = "identity") +
geom_bar(aes(y = marzo, fill = "Marzo"), stat = "identity") +
# Agrega más geom_bar para otros meses si es necesario
labs(fill = "Meses") +
theme_minimal() +
ggtitle("Medias por Estaciones")
# Graficar el dataframe con ggplot2
ggplot(df_estaciones, aes(x = estaciones)) +
geom_bar(aes(y = enero, fill = "Enero"), stat = "identity") +
geom_bar(aes(y = febrero, fill = "Febrero"), stat = "identity") +
geom_bar(aes(y = marzo, fill = "Marzo"), stat = "identity") +
# Agrega más geom_bar para otros meses si es necesario
labs(fill = "Meses") +
theme_minimal() +
ggtitle("Medias por Estaciones")
# Reorganizar el dataframe de ancho a largo (tidy data)
library(tidyr)
nuevo_dataframe_long <- gather(df_estaciones, mes, precipitacion, -estaciones)
# Crear el gráfico de línea
ggplot(nuevo_dataframe_long, aes(x = mes, y = precipitacion, color = estaciones)) +
geom_line() +
labs(title = "Precipitación por Mes (Estaciones)",
x = "Mes",
y = "Precipitación",
color = "Estaciones") +
theme_minimal()
View(nuevo_dataframe_long)
# Graficar el dataframe con ggplot2
ggplot(df_estaciones, aes(x = estaciones)) +
geom_bar(aes(y = enero, fill = "Enero"), stat = "identity") +
geom_bar(aes(y = febrero, fill = "Febrero"), stat = "identity") +
geom_bar(aes(y = marzo, fill = "Marzo"), stat = "identity") +
# Agrega más geom_bar para otros meses si es necesario
labs(fill = "Meses") +
theme_minimal() +
ggtitle("Medias por Estaciones")
# Graficar el dataframe con ggplot2
ggplot(df_estaciones, aes(x = estaciones)) +
geom_line(aes(y = enero, fill = "Enero"), stat = "identity") +
geom_line(aes(y = febrero, fill = "Febrero"), stat = "identity") +
geom_line(aes(y = marzo, fill = "Marzo"), stat = "identity") +
# Agrega más geom_bar para otros meses si es necesario
labs(fill = "Meses") +
theme_minimal() +
ggtitle("Medias por Estaciones")
# Graficar el dataframe con ggplot2
ggplot(df_estaciones, aes(x = estaciones)) +
geom_line(aes(y = enero, fill = "Enero"), stat = "identity") +
geom_line(aes(y = febrero, fill = "Febrero"), stat = "identity") +
geom_line(aes(y = marzo, fill = "Marzo"), stat = "identity") +
# Agrega más geom_bar para otros meses si es necesario
labs(fill = "Meses") +
theme_minimal() +
ggtitle("Medias por Estaciones")
# Graficar el dataframe con ggplot2
ggplot(df_estaciones, aes(color = estaciones)) +
geom_line(aes(x = enero, y = enero, fill = "Enero"), stat = "identity") +
# Agrega más geom_bar para otros meses si es necesario
labs(fill = "Meses") +
theme_minimal() +
ggtitle("Medias por Estaciones")
nuevo_dataframe_long <- gather(nuevo_dataframe, mes, precipitacion, -estaciones)
nuevo_dataframe_long <- gather(df_estaciones, mes, precipitacion, -estaciones)
# Crear el gráfico de línea
ggplot(nuevo_dataframe_long, aes(x = mes, y = precipitacion, group = estaciones, color = estaciones)) +
geom_line() +
labs(title = "Precipitación por Mes (Estaciones)",
x = "Mes",
y = "Precipitación") +
scale_x_discrete(limits = unique(nuevo_dataframe_long$mes)) +
theme_minimal()
# Crear el gráfico de línea
ggplot(nuevo_dataframe_long, aes(x = mes, y = precipitacion, group = estaciones, color = estaciones)) +
geom_line() +
labs(title = "Precipitación por Mes (Estaciones)",
x = "Mes",
y = "Precipitación") +
scale_x_discrete(limits = unique(nuevo_dataframe_long$mes)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),  # Rotar los nombres de los meses
axis.title = element_text(size = 12))  # Ajustar el tamaño de la fuente del título del eje
# Crear el gráfico de línea
ggplot(nuevo_dataframe_long, aes(x = mes, y = precipitacion, group = estaciones, color = estaciones)) +
geom_line() +
labs(title = "Precipitación por Mes (Estaciones)",
x = "Mes",
y = "Precipitación") +
scale_x_discrete(limits = unique(nuevo_dataframe_long$mes)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = -45, hjust = 1),  # Rotar los nombres de los meses
axis.title = element_text(size = 12))  # Ajustar el tamaño de la fuente del título del eje
# Crear el gráfico de línea
ggplot(nuevo_dataframe_long, aes(x = mes, y = precipitacion, group = estaciones, color = estaciones)) +
geom_line() +
labs(title = "Precipitación por Mes (Estaciones)",
x = "Mes",
y = "Precipitación") +
scale_x_discrete(limits = unique(nuevo_dataframe_long$mes)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = -45, hjust = 0),  # Rotar los nombres de los meses
axis.title = element_text(size = 12))  # Ajustar el tamaño de la fuente del título del eje
